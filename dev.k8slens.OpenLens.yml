app-id: dev.k8slens.OpenLens
runtime: org.freedesktop.Platform
runtime-version: '22.08'
sdk: org.freedesktop.Sdk
base: org.electronjs.Electron2.BaseApp
base-version: '22.08'
sdk-extensions:
  # Node.js version: https://github.com/lensapp/lens/blob/master/.github/workflows/publish-release-npm.yml#L20
  - org.freedesktop.Sdk.Extension.node16
command: open-lens
finish-args:
  - --device=dri
  - --share=ipc
  - --share=network
  - --socket=wayland
  - --socket=fallback-x11
  - --socket=ssh-auth
  - --talk-name=org.freedesktop.Notifications
  - --system-talk-name=org.freedesktop.login1
  # We use .kube/config to know what clusters/contexts are set up
  - --filesystem=~/.kube/config
  # It's common to run minikube for experimenting
  - --filesystem=~/.minikube
  # cloud providers config/creds
  - --filesystem=~/.aws
  - --filesystem=xdg-config/gcloud
  - --persist=.k8slens
modules:
  - shared-modules/libsecret/libsecret.json

  - name: libvips
    buildsystem: meson
    builddir: true
    cleanup:
      - '*'
    sources:
      - type: archive
        url: https://github.com/libvips/libvips/archive/refs/tags/v8.14.2.tar.gz
        sha256: feb30b82161cfc30d5ba396c95b08bf9af3110bc960ccc0efecebb45db22deda
        x-checker-data:
          type: anitya
          project-id: 5097
          url-template: https://github.com/libvips/libvips/archive/refs/tags/v$version.tar.gz

  - name: kubelogin
    buildsystem: simple
    build-commands:
      - install -Dm755 kubelogin "${FLATPAK_DEST}/bin/kubelogin"
    sources:
      - type: archive
        strip-components: 2
        only-arches:
          - x86_64
        url: https://github.com/Azure/kubelogin/releases/download/v0.0.31/kubelogin-linux-amd64.zip
        sha256: 476bf015d07fa22afb612381444089420b157bdf92ed6764adc8ac7e4e79b557
        x-checker-data:
          type: anitya
          project-id: 341508
          url-template: https://github.com/Azure/kubelogin/releases/download/v$version/kubelogin-linux-amd64.zip
      - type: archive
        strip-components: 2
        only-arches:
          - aarch64
        url: https://github.com/Azure/kubelogin/releases/download/v0.0.31/kubelogin-linux-arm64.zip
        sha256: 0859a24ba14bbde07f8932c5a031e159b0a032e55a2f52e83520442c4a8325c8
        x-checker-data:
          type: anitya
          project-id: 341508
          url-template: https://github.com/Azure/kubelogin/releases/download/v$version/kubelogin-linux-arm64.zip

  - name: aws-cli
    buildsystem: simple
    build-commands:
      - ./install -i "${FLATPAK_DEST}/aws-cli" -b "${FLATPAK_DEST}/bin"
    sources:
      - type: archive
        only-arches:
          - x86_64
        url: https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip
        sha256: 25a81479d3a00c7875a98a7fe341d4c924d030f04c042fa6deebe3e499fa0d1d
        x-checker-data:
          type: rotating-url
          url: https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip
      - type: archive
        only-arches:
          - aarch64
        url: https://awscli.amazonaws.com/awscli-exe-linux-aarch64.zip
        sha256: 6cb8f05f9592f6bee0ebd5ded7161552a29c09fac47d950a33238dd2a896d3f8
        x-checker-data:
          type: rotating-url
          url: https://awscli.amazonaws.com/awscli-exe-linux-aarch64.zip

  - name: google-cloud-cli
    buildsystem: simple
    build-options:
      arch:
        x86_64:
          env:
            ARCH: x86_64
        aarch64:
          env:
            ARCH: arm
    build-commands:
      - mv google-cloud-cli "${FLATPAK_DEST}/google-cloud-cli"
      - ln -sf "${FLATPAK_DEST}/google-cloud-cli/bin/gcloud" "${FLATPAK_DEST}/bin/gcloud"
      - |
        manifests=(
            "gke-gcloud-auth-plugin-linux-${ARCH}.manifest"
            "gke-gcloud-auth-plugin-linux-${ARCH}.snapshot.json"
            "gke-gcloud-auth-plugin.manifest"
            "gke-gcloud-auth-plugin.snapshot.json"
        )
        for item in ${manifests[@]}; do
            install -Dm644 \
                "google-cloud-cli-gke-gcloud-auth-plugin/.install/${item}" \
                "${FLATPAK_DEST}/google-cloud-cli/.install/${item}"
        done
      - install -Dm755 google-cloud-cli-gke-gcloud-auth-plugin/bin/gke-gcloud-auth-plugin
        "${FLATPAK_DEST}/google-cloud-cli/bin/gke-gcloud-auth-plugin"
      - ln -sf "${FLATPAK_DEST}/google-cloud-cli/bin/gke-gcloud-auth-plugin" "${FLATPAK_DEST}/bin/gke-gcloud-auth-plugin"
    sources:
      - type: archive
        dest: google-cloud-cli
        only-arches:
          - x86_64
        url: https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-cli-435.0.1-linux-x86_64.tar.gz
        sha256: 98296964ead5e99f98290b60e69826671334a088a38e32cced6dbddace24a204
      - type: archive
        dest: google-cloud-cli
        only-arches:
          - aarch64
        url: https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-cli-435.0.1-linux-arm.tar.gz
        sha256: bd3fadd38c6e157e33064d622b4c8ea116830fab01d8976befb81b89072233a2

      - type: archive
        dest: google-cloud-cli-gke-gcloud-auth-plugin
        only-arches:
          - x86_64
        url: https://dl.google.com/dl/cloudsdk/release/downloads/for_packagers/linux/google-cloud-cli-gke-gcloud-auth-plugin_435.0.1.orig_amd64.tar.gz
        sha256: d4563228dc8591e55f4aee054484a9a9b8d178d57571d0d0d653f6d9e5a9abb6
      - type: archive
        dest: google-cloud-cli-gke-gcloud-auth-plugin
        only-arches:
          - aarch64
        url: https://dl.google.com/dl/cloudsdk/release/downloads/for_packagers/linux/google-cloud-cli-gke-gcloud-auth-plugin_435.0.1.orig_aarch64.tar.gz
        sha256: 27e15b9cffbce16018ed2d4f99e5e9cc7a3206f938ed75b30a48a030e6b770ea

  - name: open-lens
    buildsystem: simple
    build-options:
      # Add the node bin directory.
      append-path: /usr/lib/sdk/node16/bin:/run/build/open-lens/flatpak-node/chromedrive
      env:
        # Don't add ELECTRON_CACHE
        XDG_CACHE_HOME: /run/build/open-lens/flatpak-node/cache
        npm_config_offline: 'true'
        npm_config_no_save: 'true'
        npm_config_cache: /run/build/open-lens/flatpak-node/npm-cache
        npm_config_loglevel: verbose
        ELECTRON_SKIP_BINARY_DOWNLOAD: 'true'
        LENS_SKIP_DOWNLOAD_BINARIES: 'true'
      arch:
        # https://github.com/sass/node-sass/issues/3033#issuecomment-763180778
        # The architecture of Electron, see https://electronjs.org/docs/tutorial/support#supported-platforms
        # for supported architectures.
        x86_64:
          env:
            npm_config_arch: x64
            npm_config_target_arch: x64
        aarch64:
          env:
            npm_config_arch: arm64
            npm_config_target_arch: arm64
    build-commands:
      - chmod +x open-lens/binaries/client/linux/*/lens-k8s-proxy open-lens/binaries/client/linux/*/kubectl
        open-lens/binaries/client/linux/*/helm

      - sed -i -e "s/electron-builder --publish onTag/electron-builder --linux dir
        --${npm_config_arch} --publish never/" open-lens/package.json

      #  don't specify npm version
      - sed -i -e '/"engines":/{n;d}' package.json

      - |
        ln -srv "$XDG_CACHE_HOME/node-gyp" "$HOME/.electron-gyp"
        npm ci --offline
      - |
        export KUBECTL_VERSION=$(cat kubectl-version.txt)
        ln -srv "$XDG_CACHE_HOME/node-gyp" "$HOME/.electron-gyp"
        npm run build
      - |
        export KUBECTL_VERSION=$(cat kubectl-version.txt)
        ln -srv "$XDG_CACHE_HOME/node-gyp" "$HOME/.electron-gyp"
        npm run build:app

      # Move the resulting, unpacked directory to /app.
      - mv open-lens/dist/linux-*unpacked "${FLATPAK_DEST}/open-lens"

      - install -Dm644 dev.k8slens.OpenLens.desktop "${FLATPAK_DEST}/share/applications/${FLATPAK_ID}.desktop"
      - install -Dm755 open-lens.sh "${FLATPAK_DEST}/bin/open-lens"
      - install -Dm644 dev.k8slens.OpenLens.metainfo.xml "${FLATPAK_DEST}/share/metainfo/${FLATPAK_ID}.metainfo.xml"
      - install -Dm644 open-lens/build/icons/512x512.png "${FLATPAK_DEST}/share/icons/hicolor/512x512/apps/${FLATPAK_ID}.png"

      # To allow separate locales
      # https://searchfox.org/mozilla-central/rev/8a4f55bc09ffc5c25dcb4586c51ae4a9fee77b4c/taskcluster/docker/firefox-flatpak/runme.sh#131-133
      - |
        APP_LOCALES_ROOT="${FLATPAK_DEST}/open-lens/locales"
        RUNTIME_LOCALES_ROOT="${FLATPAK_DEST}/share/runtime/locale"

        if [ -d "${APP_LOCALES_ROOT}" ]; then
          for lang in "${APP_LOCALES_ROOT}"/*.pak; do
            LOCALE="$(basename -s .pak "${lang}")"
            runtime_locale_dir="${RUNTIME_LOCALES_ROOT}/${LOCALE%%-*}/"
            install -Dm644 -t "${runtime_locale_dir}" "${lang}"
            ln -sf "${runtime_locale_dir}/$(basename "${lang}")" "${APP_LOCALES_ROOT}/$(basename "${lang}")"
          done
        fi
    sources:
      - type: git
        url: https://github.com/lensapp/lens.git
        tag: v6.5.2
        commit: 18e4e9e5dc1e568a9acd9b0cf6692bfc0fb39df8
        x-checker-data:
          is-main-source: true
          type: anitya
          project-id: 322370
          stable-only: true
          tag-template: v$version
      - type: patch
        path: patches/open-lens/lerna-offline.patch
      - type: patch
        path: patches/open-lens/read-kubectl-version-from-env.patch
      - type: patch
        path: patches/open-lens/set-electron-to-version-in-lockfile.patch

      - type: file
        path: open-lens.sh

      - type: file
        path: dev.k8slens.OpenLens.metainfo.xml

      - type: file
        path: dev.k8slens.OpenLens.desktop

      - type: file
        url: https://storage.googleapis.com/kubernetes-release/release/stable-1.txt
        sha256: 896851d6d4112bda54d22f7e512905d02010b63ab01eb42e0a2890799cc1a7e1
        dest-filename: kubectl-version.txt
        x-checker-data:
          type: rotating-url
          url: https://storage.googleapis.com/kubernetes-release/release/stable-1.txt

      - type: file
        only-arches: [x86_64]
        url: https://github.com/lensapp/lens-k8s-proxy/releases/download/v0.3.0/lens-k8s-proxy-linux-amd64
        sha256: d640037ae4e7b505f14cc0174d89c90f7e5aadc8df6389c51fa17bd33c7e55c6
        dest: open-lens/binaries/client/linux/x64
        dest-filename: lens-k8s-proxy
        x-checker-data:
          type: anitya
          project-id: 322711
          stable-only: true
          url-template: https://github.com/lensapp/lens-k8s-proxy/releases/download/v$version/lens-k8s-proxy-linux-amd64

      - type: file
        only-arches: [aarch64]
        url: https://github.com/lensapp/lens-k8s-proxy/releases/download/v0.3.0/lens-k8s-proxy-linux-arm64
        sha256: 86091e268f93e3aba40fb3bbecefdb8dbfece4424addfc0a51d5da79ec24cfd6
        dest: open-lens/binaries/client/linux/arm64
        dest-filename: lens-k8s-proxy
        x-checker-data:
          type: anitya
          project-id: 322711
          stable-only: true
          url-template: https://github.com/lensapp/lens-k8s-proxy/releases/download/v$version/lens-k8s-proxy-linux-arm64

      - type: file
        only-arches: [x86_64]
        url: https://storage.googleapis.com/kubernetes-release/release/v1.27.4/bin/linux/amd64/kubectl
        sha256: 4685bfcf732260f72fce58379e812e091557ef1dfc1bc8084226c7891dd6028f
        dest: open-lens/binaries/client/linux/x64
        dest-filename: kubectl
        x-checker-data:
          type: anitya
          project-id: 10954
          stable-only: true
          url-template: https://storage.googleapis.com/kubernetes-release/release/v$version/bin/linux/amd64/kubectl

      - type: file
        only-arches: [aarch64]
        url: https://storage.googleapis.com/kubernetes-release/release/v1.27.4/bin/linux/arm64/kubectl
        sha256: 5178cbb51dcfff286c20bc847d64dd35cd5993b81a2e3609581377a520a6425d
        dest: open-lens/binaries/client/linux/arm64
        dest-filename: kubectl
        x-checker-data:
          type: anitya
          project-id: 10954
          stable-only: true
          url-template: https://storage.googleapis.com/kubernetes-release/release/v$version/bin/linux/arm64/kubectl

      - type: archive
        only-arches: [x86_64]
        url: https://get.helm.sh/helm-v3.12.2-linux-amd64.tar.gz
        sha256: 2b6efaa009891d3703869f4be80ab86faa33fa83d9d5ff2f6492a8aebe97b219
        dest: open-lens/binaries/client/linux/x64
        x-checker-data:
          type: anitya
          project-id: 15046
          stable-only: true
          url-template: https://get.helm.sh/helm-v$version-linux-amd64.tar.gz

      - type: archive
        only-arches: [aarch64]
        url: https://get.helm.sh/helm-v3.12.2-linux-arm64.tar.gz
        sha256: cfafbae85c31afde88c69f0e5053610c8c455826081c1b2d665d9b44c31b3759
        dest: open-lens/binaries/client/linux/arm64
        x-checker-data:
          type: anitya
          project-id: 15046
          stable-only: true
          url-template: https://get.helm.sh/helm-v$version-linux-arm64.tar.gz

      # Add the flatpak-node-generator generated sources.
      # flatpak-node-generator --electron-node-headers --recursive yarn yarn.lock
      - generated-sources.json
      # npm install --package-lock-only --workspaces --include-workspace-root
      - type: file
        path: package-lock.json
