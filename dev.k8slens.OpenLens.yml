app-id: dev.k8slens.OpenLens
runtime: org.freedesktop.Platform
runtime-version: '22.08'
sdk: org.freedesktop.Sdk
base: org.electronjs.Electron2.BaseApp
base-version: '22.08'
sdk-extensions:
  # Node.js version: https://github.com/lensapp/lens/blob/master/.github/workflows/publish-release-npm.yml#L20
  - org.freedesktop.Sdk.Extension.node16
command: open-lens
finish-args:
  - --device=dri
  - --share=ipc
  - --share=network
  - --socket=x11
  - --socket=ssh-auth
  - --talk-name=org.freedesktop.Notifications
  - --system-talk-name=org.freedesktop.login1
  - --filesystem=~/.kube
modules:
  - shared-modules/libsecret/libsecret.json

  - name: libvips
    buildsystem: meson
    builddir: true
    cleanup:
      - '*'
    sources:
      - type: archive
        url: https://github.com/libvips/libvips/archive/refs/tags/v8.14.1.tar.gz
        sha256: a4a6b282216f7522b42ebb5cd64cfd82a0d1a632033e9c0502f021e945fed641
        x-checker-data:
          type: anitya
          project-id: 5097
          url-template: https://github.com/libvips/libvips/archive/refs/tags/v$version.tar.gz

  - name: open-lens
    buildsystem: simple
    build-options:
      # Add the node bin directory.
      append-path: /usr/lib/sdk/node16/bin:/run/build/open-lens/flatpak-node/chromedrive
      env:
        # Don't add ELECTRON_CACHE
        XDG_CACHE_HOME: /run/build/open-lens/flatpak-node/cache
        npm_config_offline: 'true'
        npm_config_no_save: 'true'
        npm_config_cache: /run/build/open-lens/flatpak-node/npm-cache
        npm_config_loglevel: verbose
        ELECTRON_SKIP_BINARY_DOWNLOAD: 'true'
        LENS_SKIP_DOWNLOAD_BINARIES: 'true'
      arch:
        # https://github.com/sass/node-sass/issues/3033#issuecomment-763180778
        # The architecture of Electron, see https://electronjs.org/docs/tutorial/support#supported-platforms
        # for supported architectures.
        x86_64:
          env:
            npm_config_arch: x64
            npm_config_target_arch: x64
        aarch64:
          env:
            npm_config_arch: arm64
            npm_config_target_arch: arm64
    build-commands:
      - chmod +x packages/open-lens/binaries/client/linux/*/lens-k8s-proxy packages/open-lens/binaries/client/linux/*/kubectl packages/open-lens/binaries/client/linux/*/helm
      - HOME="$PWD" yarn config --offline set yarn-offline-mirror "$FLATPAK_BUILDER_BUILDDIR/flatpak-node/yarn-mirror"
      - yarn install --cwd packages/openlens --frozen-lockfile --offline
      - yarn --offline lerna run -- --stream --ignore open-lens build
      - |
        ln -srv "$XDG_CACHE_HOME/node-gyp" "$HOME/.electron-gyp"
        yarn --offline lerna run -- --stream --scope open-lens build:app -- --linux dir --${npm_config_arch} --publish never

      # Copy the resulting, unpacked directory to /app.
      - cp -r packages/open-lens/dist/linux-*unpacked "${FLATPAK_DEST}/open-lens"

      - install -Dm644 dev.k8slens.OpenLens.desktop "${FLATPAK_DEST}/share/applications/${FLATPAK_ID}.desktop"
      - install -Dm755 open-lens.sh "${FLATPAK_DEST}/bin/open-lens"
      - install -Dm644 dev.k8slens.OpenLens.metainfo.xml "${FLATPAK_DEST}/share/metainfo/${FLATPAK_ID}.metainfo.xml"
      - install -Dm644 packages/open-lens/build/icons/512x512.png "${FLATPAK_DEST}/share/icons/hicolor/512x512/apps/${FLATPAK_ID}.png"

      # To allow separate locales
      # https://searchfox.org/mozilla-central/rev/8a4f55bc09ffc5c25dcb4586c51ae4a9fee77b4c/taskcluster/docker/firefox-flatpak/runme.sh#131-133
      - |
        APP_LOCALES_ROOT="${FLATPAK_DEST}/open-lens/locales"
        RUNTIME_LOCALES_ROOT="${FLATPAK_DEST}/share/runtime/locale"

        if [ -d "${APP_LOCALES_ROOT}" ]; then
          for lang in "${APP_LOCALES_ROOT}"/*.pak; do
            LOCALE="$(basename -s .pak "${lang}")"
            runtime_locale_dir="${RUNTIME_LOCALES_ROOT}/${LOCALE%%-*}/"
            install -Dm644 -t "${runtime_locale_dir}" "${lang}"
            ln -sf "${runtime_locale_dir}/$(basename "${lang}")" "${APP_LOCALES_ROOT}/$(basename "${lang}")"
          done
        fi
    sources:
      - type: git
        url: https://github.com/lensapp/lens.git
        tag: v6.4.0-beta.10
        commit: e196ca56eb5fe0dbd50a5287b3a010f8b0ce302f
        x-checker-data:
          type: anitya
          project-id: 322370
          # since v6.4.0 changed to the directory structure used in this build recipe, turn stable-only to true after it's released
          stable-only: false
          tag-template: v$version

      - type: file
        path: open-lens.sh

      - type: file
        path: dev.k8slens.OpenLens.metainfo.xml

      - type: file
        path: dev.k8slens.OpenLens.desktop

      - type: file
        only-arches: [x86_64]
        url: https://github.com/lensapp/lens-k8s-proxy/releases/download/v0.3.0/lens-k8s-proxy-linux-amd64
        sha256: d640037ae4e7b505f14cc0174d89c90f7e5aadc8df6389c51fa17bd33c7e55c6
        dest: packages/open-lens/binaries/client/linux/x64
        dest-filename: lens-k8s-proxy
        x-checker-data:
          type: anitya
          project-id: 322711
          stable-only: true
          url-template: https://github.com/lensapp/lens-k8s-proxy/releases/download/v$version/lens-k8s-proxy-linux-amd64

      - type: file
        only-arches: [aarch64]
        url: https://github.com/lensapp/lens-k8s-proxy/releases/download/v0.3.0/lens-k8s-proxy-linux-arm64
        sha256: 86091e268f93e3aba40fb3bbecefdb8dbfece4424addfc0a51d5da79ec24cfd6
        dest: packages/open-lens/binaries/client/linux/x64
        dest-filename: lens-k8s-proxy
        x-checker-data:
          type: anitya
          project-id: 322711
          stable-only: true
          url-template: https://github.com/lensapp/lens-k8s-proxy/releases/download/v$version/lens-k8s-proxy-linux-arm64

      - type: file
        only-arches: [x86_64]
        url: https://storage.googleapis.com/kubernetes-release/release/v1.26.1/bin/linux/amd64/kubectl
        sha256: d57be22cfa25f7427cfb538cfc8853d763878f8b36c76ce93830f6f2d67c6e5d
        dest: packages/open-lens/binaries/client/linux/x64
        dest-filename: kubectl
        x-checker-data:
          type: anitya
          project-id: 10954
          stable-only: true
          url-template: https://storage.googleapis.com/kubernetes-release/release/v$version/bin/linux/amd64/kubectl

      - type: file
        only-arches: [aarch64]
        url: https://storage.googleapis.com/kubernetes-release/release/v1.26.1/bin/linux/arm64/kubectl
        sha256: 4027cb0a2840bc14ec3f18151b3360dd2d1f6ce730ed5ac28bd846c17e7d73f5
        dest: packages/open-lens/binaries/client/linux/x64
        dest-filename: kubectl
        x-checker-data:
          type: anitya
          project-id: 10954
          stable-only: true
          url-template: https://storage.googleapis.com/kubernetes-release/release/v$version/bin/linux/arm64/kubectl

      - type: file
        only-arches: [x86_64]
        url: https://get.helm.sh/helm-v3.11.0-linux-amd64.tar.gz
        sha256: 6c3440d829a56071a4386dd3ce6254eab113bc9b1fe924a6ee99f7ff869b9e0b
        dest: packages/open-lens/binaries/client/linux/x64
        dest-filename: helm
        x-checker-data:
          type: anitya
          project-id: 15046
          stable-only: true
          url-template: https://get.helm.sh/helm-v$version-linux-amd64.tar.gz

      - type: file
        only-arches: [aarch64]
        url: https://get.helm.sh/helm-v3.11.0-linux-arm64.tar.gz
        sha256: 57d36ff801ce8c0201ce9917c5a2d3b4da33e5d4ea154320962c7d6fb13e1f2c
        dest: packages/open-lens/binaries/client/linux/x64
        dest-filename: helm
        x-checker-data:
          type: anitya
          project-id: 15046
          stable-only: true
          url-template: https://get.helm.sh/helm-v$version-linux-arm64.tar.gz

      # Add the flatpak-node-generator generated sources.
      # flatpak-node-generator --electron-node-headers --recursive yarn yarn.lock
      - generated-sources.json
